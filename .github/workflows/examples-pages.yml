name: Deploy layout- & content-elements-examples to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - "layout-examples/**"
      - "content-elements-examples/**"
      - "content-elements/**"
      - "layouts/**"
      - "frontend/**"
      - ".github/workflows/examples-pages.yml"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-examples"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pandoc
        run: sudo apt-get update && sudo apt-get install -y pandoc

      - name: Prepare dist & convert Markdown
        run: |
          rm -rf dist
          mkdir -p dist

          # 1) Kopiere das komplette Repository (ohne Git-Metadaten) nach dist/
          rsync -a --exclude 'dist/' --exclude '.git/' ./ dist/

          # 2) Konvertiere alle .md -> .html (parallel in-place in dist)
          find dist -type f -iname "*.md" | while read -r f; do
            html="${f%.md}.html"
            pandoc "$f" -f markdown -t html5 -s -o "$html"
          done

          # 3) .nojekyll, damit Pages nichts umbaut
          touch dist/.nojekyll

          # 4) index.html mit Linkliste aller HTML/HTM-Dateien
          cat > dist/index.html <<'HTML'
          <!doctype html>
          <meta charset="utf-8">
          <title>Repository Preview</title>
          <meta name="viewport" content="width=device-width,initial-scale=1">
          <style>
            body{font:16px/1.5 system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;margin:2rem;max-width:72ch}
            h1{margin:0 0 1rem}
            ul{padding-left:1.2rem}
            a{word-break:break-word}
            code{background:#f6f8fa;padding:.1rem .3rem;border-radius:.25rem}
          </style>
          <h1>Randnotizen – Repository Vorschau</h1>
          <p>Alle Dateien aus dem Repo werden auf GitHub Pages bereitgestellt. Markdown-Dateien liegen zusätzlich als HTML-Versionen vor.</p>
          <ul>
          HTML
          find dist -type f \( -iname "*.html" -o -iname "*.htm" \) \
            ! -path "dist/index.html" ! -path "dist/404.html" | sed 's#^dist/##' | sort | while read -r f; do
            esc="$(printf '%s\n' "$f" | sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g')"
            echo "<li><a href=\"${esc}\">${esc}</a></li>" >> dist/index.html
          done
          echo "</ul>" >> dist/index.html

          # 4b) Fehlende index.html-Dateien in Unterordnern erzeugen
          python3 - <<'PY'
import html
import os

base = "dist"

for root, dirs, files in os.walk(base):
    index_path = os.path.join(root, "index.html")
    if os.path.exists(index_path):
        continue

    rel = os.path.relpath(root, base)
    if rel == ".":
        display = "/"
    else:
        display = "/" + rel.replace(os.sep, "/") + "/"

    entries = []

    for directory in sorted(dirs):
        entries.append(f'<li><a href="{directory}/index.html">{html.escape(directory)}/</a></li>')

    for filename in sorted(files):
        lower = filename.lower()
        if lower == "index.html" or not lower.endswith((".html", ".htm")):
            continue
        entries.append(f'<li><a href="{filename}">{html.escape(filename)}</a></li>')

    if not entries:
        entries.append("<li><em>Keine HTML-Inhalte in diesem Verzeichnis.</em></li>")

    with open(index_path, "w", encoding="utf-8") as fh:
        fh.write(f"""<!doctype html>
<meta charset=\"utf-8\">
<title>Index von {html.escape(display)}</title>
<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">
<style>
  body{{font:16px/1.5 system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;margin:2rem;max-width:72ch}}
  h1{{margin:0 0 1rem}}
  ul{{padding-left:1.2rem}}
  a{{word-break:break-word}}
  code{{background:#f6f8fa;padding:.1rem .3rem;border-radius:.25rem}}
</style>
<h1>Index von <code>{html.escape(display)}</code></h1>
<ul>
{'\n'.join(entries)}
</ul>
""")
PY

          # 5) 404 → zurück zur Übersicht
          cat > dist/404.html <<'HTML'
          <!doctype html>
          <meta charset="utf-8">
          <title>Not Found</title>
          <meta http-equiv="refresh" content="0; url=./index.html">
          <p>Seite nicht gefunden. <a href="./index.html">Zur Übersicht</a>.</p>
          HTML

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
